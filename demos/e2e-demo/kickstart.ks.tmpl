lang en_US.UTF-8
keyboard us
timezone UTC
zerombr
text
reboot

# Configure network to use DHCP and activate on boot
network --bootproto=dhcp --device=link --activate --onboot=on

# Partition disk with a 1GB boot XFS partition and an LVM volume containing a 8GB+ system root
# The remainder of the volume will be used by the CSI driver for storing data
#
# For example, a 20GB disk would be partitioned in the following way:
#
# NAME          MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
# sda             8:0    0  20G  0 disk
# ├─sda1          8:1    0   1G  0 part /boot
# └─sda2          8:2    0  19G  0 part
#  └─rhel-root  253:0    0   8G  0 lvm  /sysroot
#
zerombr
clearpart --all --initlabel
part /boot --fstype=xfs --asprimary --size=1024
part pv.01 --grow
volgroup rhel pv.01
logvol / --vgname=rhel --fstype=xfs --size=8192 --name=root

# Configure ostree
ostreesetup --nogpg --osname=rhel --remote=edge --url=file:///run/install/repo/ostree/repo --ref=rhel/8/x86_64/edge


%post --log=/var/log/anaconda/post-install.log --erroronfail

# Add the default user and enable passwordless sudo. Add password and/or authorized keys if configured.
useradd -m -d "/home/$USER_NAME" -G wheel "$USER_NAME"
[ -n '$USER_PASS_ENCRYPTED' ] && usermod -p '$USER_PASS_ENCRYPTED' "$USER_NAME"
if [ -n '$USER_AUTHORIZED_KEY' ]; then
    mkdir -p "/home/$USER_NAME/.ssh"
    chmod 755 "/home/$USER_NAME/.ssh"
    tee "/home/$USER_NAME/.ssh/authorized_keys" > /dev/null <<EOAUTHORIZEDKEY
$USER_AUTHORIZED_KEY
EOAUTHORIZEDKEY
fi
echo -e '$USER_NAME\tALL=(ALL)\tNOPASSWD: ALL' >> /etc/sudoers

# Configure where rpm-ostree looks for ostree updates
echo -e 'url=$OSTREE_REPO_URL' >> /etc/ostree/remotes.d/edge.conf

# Configure where transmission-agent looks for config updates
echo -e '$TRANSMISSION_URL' > /etc/transmission-url

# The pull secret is mandatory for MicroShift builds on top of OpenShift, but not OKD
# The /etc/crio/crio.conf.d/microshift.conf references the /etc/crio/openshift-pull-secret file
mkdir -p /etc/crio
cat > /etc/crio/openshift-pull-secret << EOPULLSECRET
$OCP_PULL_SECRET_CONTENTS
EOPULLSECRET
chmod 600 /etc/crio/openshift-pull-secret

# Configure the mandatory firewall rules
firewall-offline-cmd --zone=trusted --add-source=10.42.0.0/16
firewall-offline-cmd --zone=trusted --add-source=169.254.169.1

%end


%post --log=/var/log/anaconda/insights-on-reboot-unit-install.log --interpreter=/usr/bin/bash --erroronfail

INSIGHTS_CLIENT_OVERRIDE_DIR=/etc/systemd/system/insights-client.service.d
INSIGHTS_CLIENT_OVERRIDE_FILE=$INSIGHTS_CLIENT_OVERRIDE_DIR/override.conf

if [ ! -f $INSIGHTS_CLIENT_OVERRIDE_FILE ]; then
    mkdir -p $INSIGHTS_CLIENT_OVERRIDE_DIR
    cat > $INSIGHTS_CLIENT_OVERRIDE_FILE << EOF 
[Unit]
Requisite=greenboot-healthcheck.service
After=network-online.target greenboot-healthcheck.service

[Install]
WantedBy=multi-user.target
EOF
    systemctl enable insights-client.service
fi

%end
