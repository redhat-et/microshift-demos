---
# Source: crds/topolvm.cybozu.com_logicalvolumes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: logicalvolumes.topolvm.cybozu.com
spec:
  group: topolvm.cybozu.com
  names:
    kind: LogicalVolume
    listKind: LogicalVolumeList
    plural: logicalvolumes
    singular: logicalvolume
  scope: Cluster
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: LogicalVolume is the Schema for the logicalvolumes API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: LogicalVolumeSpec defines the desired state of LogicalVolume
              properties:
                deviceClass:
                  type: string
                name:
                  type: string
                nodeName:
                  type: string
                size:
                  anyOf:
                    - type: integer
                    - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
              required:
                - name
                - nodeName
                - size
              type: object
            status:
              description: LogicalVolumeStatus defines the observed state of LogicalVolume
              properties:
                code:
                  description: A Code is an unsigned 32-bit error code as defined in the gRPC spec.
                  format: int32
                  type: integer
                currentSize:
                  anyOf:
                    - type: integer
                    - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                message:
                  type: string
                volumeID:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
# Source: topolvm/templates/lvmd/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: topolvm-lvmd
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: true
  hostPID: true
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'hostPath'
    - 'secret'
  allowedHostPaths:
    - pathPrefix: /run/topolvm
      readOnly: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
---
# Source: topolvm/templates/node/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: topolvm-node
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: true
  allowPrivilegeEscalation: true
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'secret'
    - 'hostPath'
  allowedHostPaths:
    - pathPrefix: /var/lib/kubelet
      readOnly: false
    - pathPrefix: /run/topolvm
      readOnly: false
  hostNetwork: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
---
# Source: topolvm/templates/scheduler/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: topolvm-scheduler
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: false
  allowPrivilegeEscalation: false
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'secret'
  hostNetwork: true
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MayRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: true
---
# Source: topolvm/templates/controller/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: topolvm-controller
  namespace: topolvm-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: topolvm-controller
---
# Source: topolvm/templates/scheduler/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: topolvm-scheduler
  namespace: topolvm-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: topolvm-scheduler
---
# Source: topolvm/charts/cert-manager/templates/cainjector-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: topolvm-cert-manager-cainjector
  namespace: "topolvm-system"
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
---
# Source: topolvm/charts/cert-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: topolvm-cert-manager
  namespace: "topolvm-system"
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
---
# Source: topolvm/charts/cert-manager/templates/webhook-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: topolvm-cert-manager-webhook
  namespace: "topolvm-system"
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
---
# Source: topolvm/templates/controller/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: topolvm-controller
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: topolvm/templates/lvmd/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: topolvm-lvmd
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: topolvm/templates/node/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: topolvm-node
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: topolvm/templates/scheduler/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: topolvm-scheduler
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: topolvm/charts/cert-manager/templates/webhook-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: topolvm-cert-manager-webhook
  namespace: "topolvm-system"
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "webhook"
data:
---
# Source: topolvm/templates/lvmd/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: topolvm-lvmd-0
  namespace: topolvm-system
  labels:
    idx: "0"
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
data:
  lvmd.yaml: |
    socket-name: /run/topolvm/lvmd.sock
    device-classes: 
      - spare-gb: 9
        volume-group: vg_root
---
# Source: topolvm/templates/scheduler/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: topolvm-scheduler-options
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
data:
  scheduler-options.yaml: |
    listen: "localhost:9251"
    default-divisor: 1
---
# Source: topolvm/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: topolvm-provisioner
  annotations:
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
provisioner: topolvm.cybozu.com
parameters:
  "csi.storage.k8s.io/fstype": "xfs"
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
---
# Source: topolvm/charts/cert-manager/templates/cainjector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "create", "update", "patch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["apiregistration.k8s.io"]
    resources: ["apiservices"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["auditregistration.k8s.io"]
    resources: ["auditsinks"]
    verbs: ["get", "list", "watch", "update"]
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
# Issuer controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-cert-manager-controller-issuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers", "issuers/status"]
    verbs: ["update"]
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
# ClusterIssuer controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-cert-manager-controller-clusterissuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers", "clusterissuers/status"]
    verbs: ["update"]
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
# Certificates controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-cert-manager-controller-certificates
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificates/status", "certificaterequests", "certificaterequests/status"]
    verbs: ["update"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "clusterissuers", "issuers"]
    verbs: ["get", "list", "watch"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates/finalizers", "certificaterequests/finalizers"]
    verbs: ["update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders"]
    verbs: ["create", "delete", "get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
# Orders controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-cert-manager-controller-orders
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders", "orders/status"]
    verbs: ["update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders", "challenges"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers", "issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges"]
    verbs: ["create", "delete"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders/finalizers"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
# Challenges controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-cert-manager-controller-challenges
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
  # Use to update challenge resource status
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "challenges/status"]
    verbs: ["update"]
  # Used to watch challenge resources
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges"]
    verbs: ["get", "list", "watch"]
  # Used to watch challenges, issuer and clusterissuer resources
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers", "clusterissuers"]
    verbs: ["get", "list", "watch"]
  # Need to be able to retrieve ACME account private key to complete challenges
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  # Used to create events
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  # HTTP01 rules
  - apiGroups: [""]
    resources: ["pods", "services"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  - apiGroups: [ "networking.x-k8s.io" ]
    resources: [ "httproutes" ]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  # We require the ability to specify a custom hostname when we are creating
  # new ingress resources.
  # See: https://github.com/openshift/origin/blob/21f191775636f9acadb44fa42beeb4f75b255532/pkg/route/apiserver/admission/ingress_admission.go#L84-L148
  - apiGroups: ["route.openshift.io"]
    resources: ["routes/custom-host"]
    verbs: ["create"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges/finalizers"]
    verbs: ["update"]
  # DNS01 rules (duplicated above)
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
# ingress-shim controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-cert-manager-controller-ingress-shim
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests"]
    verbs: ["create", "update", "delete"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses/finalizers"]
    verbs: ["update"]
  - apiGroups: ["networking.x-k8s.io"]
    resources: ["gateways", "httproutes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.x-k8s.io"]
    resources: ["gateways/finalizers", "httproutes/finalizers"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-cert-manager-view
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "orders"]
    verbs: ["get", "list", "watch"]
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-cert-manager-edit
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers"]
    verbs: ["create", "delete", "deletecollection", "patch", "update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "orders"]
    verbs: ["create", "delete", "deletecollection", "patch", "update"]
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
# Permission to approve CertificateRequests referencing cert-manager.io Issuers and ClusterIssuers
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-cert-manager-controller-approve:cert-manager-io
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "cert-manager"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["signers"]
    verbs: ["approve"]
    resourceNames: ["issuers.cert-manager.io/*", "clusterissuers.cert-manager.io/*"]
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
# Permission to:
# - Update and sign CertificatSigningeRequests referencing cert-manager.io Issuers and ClusterIssuers
# - Perform SubjectAccessReviews to test whether users are able to reference Namespaced Issuers
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-cert-manager-controller-certificatesigningrequests
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "cert-manager"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests/status"]
    verbs: ["update"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["signers"]
    resourceNames: ["issuers.cert-manager.io/*", "clusterissuers.cert-manager.io/*"]
    verbs: ["sign"]
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews"]
    verbs: ["create"]
---
# Source: topolvm/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-cert-manager-webhook:subjectaccessreviews
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
---
# Source: topolvm/templates/controller/clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-system:controller
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update", "delete"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses","csidrivers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["topolvm.cybozu.com"]
    resources: ["logicalvolumes", "logicalvolumes/status"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: topolvm/templates/controller/clusterroles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: topolvm-external-provisioner-runner
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch"]
---
# Source: topolvm/templates/controller/clusterroles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: topolvm-external-resizer-runner
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
---
# Source: topolvm/templates/node/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-system:node
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["topolvm.cybozu.com"]
    resources: ["logicalvolumes", "logicalvolumes/status"]
    verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csidrivers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    verbs: ["use"]
    resourceNames: ["topolvm-node"]
---
# Source: topolvm/charts/cert-manager/templates/cainjector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-cert-manager-cainjector
subjects:
  - name: topolvm-cert-manager-cainjector
    namespace: "topolvm-system"
    kind: ServiceAccount
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-cert-manager-controller-issuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-cert-manager-controller-issuers
subjects:
  - name: topolvm-cert-manager
    namespace: "topolvm-system"
    kind: ServiceAccount
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-cert-manager-controller-clusterissuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-cert-manager-controller-clusterissuers
subjects:
  - name: topolvm-cert-manager
    namespace: "topolvm-system"
    kind: ServiceAccount
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-cert-manager-controller-certificates
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-cert-manager-controller-certificates
subjects:
  - name: topolvm-cert-manager
    namespace: "topolvm-system"
    kind: ServiceAccount
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-cert-manager-controller-orders
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-cert-manager-controller-orders
subjects:
  - name: topolvm-cert-manager
    namespace: "topolvm-system"
    kind: ServiceAccount
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-cert-manager-controller-challenges
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-cert-manager-controller-challenges
subjects:
  - name: topolvm-cert-manager
    namespace: "topolvm-system"
    kind: ServiceAccount
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-cert-manager-controller-ingress-shim
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-cert-manager-controller-ingress-shim
subjects:
  - name: topolvm-cert-manager
    namespace: "topolvm-system"
    kind: ServiceAccount
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-cert-manager-controller-approve:cert-manager-io
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "cert-manager"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-cert-manager-controller-approve:cert-manager-io
subjects:
  - name: topolvm-cert-manager
    namespace: "topolvm-system"
    kind: ServiceAccount
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-cert-manager-controller-certificatesigningrequests
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "cert-manager"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-cert-manager-controller-certificatesigningrequests
subjects:
  - name: topolvm-cert-manager
    namespace: "topolvm-system"
    kind: ServiceAccount
---
# Source: topolvm/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-cert-manager-webhook:subjectaccessreviews
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-cert-manager-webhook:subjectaccessreviews
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: topolvm-cert-manager-webhook
  namespace: topolvm-system
---
# Source: topolvm/templates/controller/clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-system:controller
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    namespace: topolvm-system
    name: topolvm-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-system:controller
---
# Source: topolvm/templates/controller/clusterrolebindings.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: topolvm-csi-provisioner-role
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    namespace: topolvm-system
    name: topolvm-controller
roleRef:
  kind: ClusterRole
  name: topolvm-external-provisioner-runner
  apiGroup: rbac.authorization.k8s.io
---
# Source: topolvm/templates/controller/clusterrolebindings.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: topolvm-csi-resizer-role
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    namespace: topolvm-system
    name: topolvm-controller
roleRef:
  kind: ClusterRole
  name: topolvm-external-resizer-runner
  apiGroup: rbac.authorization.k8s.io
---
# Source: topolvm/templates/node/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-system:node
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: topolvm-node
    namespace: topolvm-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-system:node
---
# Source: topolvm/charts/cert-manager/templates/cainjector-rbac.yaml
# leader election rules
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: topolvm-cert-manager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
  # Used for leader election by the controller
  # cert-manager-cainjector-leader-election is used by the CertificateBased injector controller
  #   see cmd/cainjector/start.go#L113
  # cert-manager-cainjector-leader-election-core is used by the SecretBased injector controller
  #   see cmd/cainjector/start.go#L137
  # See also: https://github.com/kubernetes-sigs/controller-runtime/pull/1144#discussion_r480173688
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["cert-manager-cainjector-leader-election", "cert-manager-cainjector-leader-election-core"]
    verbs: ["get", "update", "patch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["create"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    resourceNames: ["cert-manager-cainjector-leader-election", "cert-manager-cainjector-leader-election-core"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: topolvm-cert-manager:leaderelection
  namespace: kube-system
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
  # Used for leader election by the controller
  # See also: https://github.com/kubernetes-sigs/controller-runtime/pull/1144#discussion_r480173688
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["cert-manager-controller"]
    verbs: ["get", "update", "patch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["create"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    resourceNames: ["cert-manager-controller"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
---
# Source: topolvm/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: topolvm-cert-manager-webhook:dynamic-serving
  namespace: "topolvm-system"
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames:
  - 'topolvm-cert-manager-webhook-ca'
  verbs: ["get", "list", "watch", "update"]
# It's not possible to grant CREATE permission on a single resourceName.
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
---
# Source: topolvm/templates/controller/roles.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-election
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["", "coordination.k8s.io"]
    resources: ["configmaps", "leases"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: topolvm/templates/controller/roles.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-provisioner-cfg
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
rules:
  # Only one of the following rules for endpoints or leases is required based on
  # what is set for `--leader-election-type`. Endpoints are deprecated in favor of Leases.
  # - apiGroups: [""]
  #   resources: ["endpoints"]
  #   verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  # Permissions for CSIStorageCapacity are only needed enabling the publishing
  # of storage capacity information.
  - apiGroups: ["storage.k8s.io"]
    resources: ["csistoragecapacities"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # The GET permissions below are needed for walking up the ownership chain
  # for CSIStorageCapacity. They are sufficient for deployment via
  # StatefulSet (only needs to get Pod) and Deployment (needs to get
  # Pod and then ReplicaSet to find the Deployment).
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get"]
---
# Source: topolvm/templates/controller/roles.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-resizer-cfg
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: topolvm/templates/lvmd/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: psp:topolvm-lvmd
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    verbs: ["use"]
    resourceNames: ["topolvm-lvmd"]
---
# Source: topolvm/templates/scheduler/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: psp:topolvm-scheduler
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    verbs: ["use"]
    resourceNames: ["topolvm-scheduler"]
---
# Source: topolvm/charts/cert-manager/templates/cainjector-rbac.yaml
# grant cert-manager permission to manage the leaderelection configmap in the
# leader election namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: topolvm-cert-manager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: topolvm-cert-manager-cainjector:leaderelection
subjects:
  - kind: ServiceAccount
    name: topolvm-cert-manager-cainjector
    namespace: topolvm-system
---
# Source: topolvm/charts/cert-manager/templates/rbac.yaml
# grant cert-manager permission to manage the leaderelection configmap in the
# leader election namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: topolvm-cert-manager:leaderelection
  namespace: kube-system
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: topolvm-cert-manager:leaderelection
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: topolvm-cert-manager
    namespace: topolvm-system
---
# Source: topolvm/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: topolvm-cert-manager-webhook:dynamic-serving
  namespace: "topolvm-system"
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: topolvm-cert-manager-webhook:dynamic-serving
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: topolvm-cert-manager-webhook
  namespace: topolvm-system
---
# Source: topolvm/templates/controller/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-election
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    namespace: topolvm-system
    name: topolvm-controller
roleRef:
  kind: Role
  name: leader-election
  apiGroup: rbac.authorization.k8s.io
---
# Source: topolvm/templates/controller/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-role-cfg
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    namespace: topolvm-system
    name: topolvm-controller
roleRef:
  kind: Role
  name: external-provisioner-cfg
  apiGroup: rbac.authorization.k8s.io
---
# Source: topolvm/templates/controller/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-resizer-role-cfg
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: topolvm-controller
    namespace: topolvm-system
roleRef:
  kind: Role
  name: external-resizer-cfg
  apiGroup: rbac.authorization.k8s.io
---
# Source: topolvm/templates/lvmd/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: topolvm-lvmd:psp:topolvm-lvmd
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: topolvm-lvmd
    namespace: topolvm-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: psp:topolvm-lvmd
---
# Source: topolvm/templates/scheduler/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: topolvm-scheduler:psp:topolvm-scheduler
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: psp:topolvm-scheduler
subjects:
  - kind: ServiceAccount
    namespace: topolvm-system
    name: topolvm-scheduler
---
# Source: topolvm/charts/cert-manager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: topolvm-cert-manager
  namespace: "topolvm-system"
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 9402
    name: tcp-prometheus-servicemonitor
    targetPort: 9402
  selector:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
---
# Source: topolvm/charts/cert-manager/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: topolvm-cert-manager-webhook
  namespace: "topolvm-system"
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
spec:
  type: ClusterIP
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: "https"
  selector:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "webhook"
---
# Source: topolvm/templates/controller/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: topolvm-controller
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: topolvm-controller
  ports:
    - name: webhook
      port: 443
      protocol: TCP
      targetPort: webhook
---
# Source: topolvm/templates/lvmd/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: topolvm-lvmd-0
  namespace: topolvm-system
  labels:
    idx: "0"
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      idx: "0"
      app.kubernetes.io/name: topolvm-lvmd
  template:
    metadata:
      labels:
        idx: "0"
        app.kubernetes.io/name: topolvm-lvmd
      annotations:
        checksum/config: 98569cf22ab6232f77ec42d379df25778ce4b0fb98902cc02fb7beaf735eed80
        prometheus.io/port: metrics
    spec:
      serviceAccountName: topolvm-lvmd
      hostPID: true
      containers:
        - name: lvmd
          image: "ghcr.io/topolvm/topolvm-with-sidecar:0.11.0"
          securityContext:
            privileged: true
          command:
            - /lvmd
            - --container
          volumeMounts:
            - name: config
              mountPath: /etc/topolvm
            - name: lvmd-socket-dir
              mountPath: /run/topolvm
      volumes:
        - name: config
          configMap:
            name: topolvm-lvmd-0
        - name: lvmd-socket-dir
          hostPath:
            path: /run/topolvm
            type: DirectoryOrCreate
---
# Source: topolvm/templates/node/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: topolvm-node
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: topolvm-node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: topolvm-node
      annotations: 
        prometheus.io/port: metrics
    spec:
      serviceAccountName: topolvm-node
      containers:
        - name: topolvm-node
          image: "ghcr.io/topolvm/topolvm-with-sidecar:0.11.0"
          securityContext: 
            privileged: true
          command:
            - /topolvm-node
            - --csi-socket=/var/lib/kubelet/plugins/topolvm.cybozu.com/node/csi-topolvm.sock
            - --lvmd-socket=/run/topolvm/lvmd.sock
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            failureThreshold: 3
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 60
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: node-plugin-dir
              mountPath: /var/lib/kubelet/plugins/topolvm.cybozu.com/node/
            - name: lvmd-socket-dir
              mountPath: /run/topolvm
            - name: pod-volumes-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - name: csi-plugin-dir
              mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
              mountPropagation: "Bidirectional"

        - name: csi-registrar
          image: "ghcr.io/topolvm/topolvm-with-sidecar:0.11.0"
          command:
            - /csi-node-driver-registrar
            - --csi-address=/var/lib/kubelet/plugins/topolvm.cybozu.com/node/csi-topolvm.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/topolvm.cybozu.com/node/csi-topolvm.sock
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=/var/lib/kubelet/plugins/topolvm.cybozu.com/node/csi-topolvm.sock
              - --mode=kubelet-registration-probe
            initialDelaySeconds: 3
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - rm -rf /registration/topolvm.cybozu.com /registration/topolvm.cybozu.com-reg.sock
          volumeMounts:
            - name: node-plugin-dir
              mountPath: /var/lib/kubelet/plugins/topolvm.cybozu.com/node/
            - name: registration-dir
              mountPath: /registration

        - name: liveness-probe
          image: "ghcr.io/topolvm/topolvm-with-sidecar:0.11.0"
          command:
            - /livenessprobe
            - --csi-address=/var/lib/kubelet/plugins/topolvm.cybozu.com/node/csi-topolvm.sock
          volumeMounts:
            - name: node-plugin-dir
              mountPath: /var/lib/kubelet/plugins/topolvm.cybozu.com/node/

      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: node-plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/topolvm.cybozu.com/node
            type: DirectoryOrCreate
        - name: csi-plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/kubernetes.io/csi
            type: DirectoryOrCreate
        - name: pod-volumes-dir
          hostPath:
            path: /var/lib/kubelet/pods/
            type: DirectoryOrCreate
        - name: lvmd-socket-dir
          hostPath:
            path: /run/topolvm
            type: Directory
---
# Source: topolvm/templates/scheduler/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: topolvm-scheduler
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: topolvm-scheduler
  template:
    metadata:
      annotations:
        checksum/config: 700303f025f9d004c6bc734e8cd7b73d036221a8a744c045806a58ab992c21c3
      labels:
        app.kubernetes.io/name: topolvm-scheduler
    spec:
      securityContext: 
        runAsGroup: 10000
        runAsUser: 10000
      serviceAccountName: topolvm-scheduler
      containers:
        - name: topolvm-scheduler
          image: "ghcr.io/topolvm/topolvm-with-sidecar:0.11.0"
          command:
            - /topolvm-scheduler
            - --config=/etc/topolvm/scheduler-options.yaml
          livenessProbe:
            httpGet:
              host: localhost
              port: 9251
              path: /status
          readinessProbe:
            httpGet:
              host: localhost
              port: 9251
              path: /status
          volumeMounts:
            - mountPath: /etc/topolvm
              name: topolvm-scheduler-options
      hostNetwork: true
      volumes:
        - name: topolvm-scheduler-options
          configMap:
            name: topolvm-scheduler-options
      affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
      tolerations: 
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
---
# Source: topolvm/charts/cert-manager/templates/cainjector-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: topolvm-cert-manager-cainjector
  namespace: "topolvm-system"
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/instance: topolvm
      app.kubernetes.io/component: "cainjector"
  template:
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/instance: topolvm
        app.kubernetes.io/component: "cainjector"
        app.kubernetes.io/version: "v1.7.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.7.0
    spec:
      serviceAccountName: topolvm-cert-manager-cainjector
      securityContext:
        runAsNonRoot: true
      containers:
        - name: cert-manager
          image: "quay.io/jetstack/cert-manager-cainjector:v1.7.0"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --leader-election-namespace=kube-system
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
---
# Source: topolvm/charts/cert-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: topolvm-cert-manager
  namespace: "topolvm-system"
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: topolvm
      app.kubernetes.io/component: "controller"
  template:
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/instance: topolvm
        app.kubernetes.io/component: "controller"
        app.kubernetes.io/version: "v1.7.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.7.0
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
    spec:
      serviceAccountName: topolvm-cert-manager
      securityContext:
        
        runAsNonRoot: true
      containers:
        - name: cert-manager
          image: "quay.io/jetstack/cert-manager-controller:v1.7.0"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=kube-system
          ports:
          - containerPort: 9402
            protocol: TCP
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
---
# Source: topolvm/charts/cert-manager/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: topolvm-cert-manager-webhook
  namespace: "topolvm-system"
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/instance: topolvm
      app.kubernetes.io/component: "webhook"
  template:
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/name: webhook
        app.kubernetes.io/instance: topolvm
        app.kubernetes.io/component: "webhook"
        app.kubernetes.io/version: "v1.7.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.7.0
    spec:
      serviceAccountName: topolvm-cert-manager-webhook
      securityContext:
        runAsNonRoot: true
      containers:
        - name: cert-manager
          image: "quay.io/jetstack/cert-manager-webhook:v1.7.0"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --secure-port=10250
          - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
          - --dynamic-serving-ca-secret-name=topolvm-cert-manager-webhook-ca
          - --dynamic-serving-dns-names=topolvm-cert-manager-webhook,topolvm-cert-manager-webhook.topolvm-system,topolvm-cert-manager-webhook.topolvm-system.svc
          ports:
          - name: https
            protocol: TCP
            containerPort: 10250
          livenessProbe:
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
---
# Source: topolvm/templates/controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: topolvm-controller
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: topolvm-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: topolvm-controller
    spec:
      securityContext: 
        runAsGroup: 10000
        runAsUser: 10000
      serviceAccountName: topolvm-controller
      containers:
        - name: topolvm-controller
          image: "ghcr.io/topolvm/topolvm-with-sidecar:0.11.0"
          command:
            - /topolvm-controller
            - --cert-dir=/certs
          ports:
            - containerPort: 9443
              name: webhook
              protocol: TCP
            - containerPort: 9808
              name: healthz
              protocol: TCP
            - containerPort: 8081
              name: readyz
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: readyz
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            failureThreshold: 3
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 60
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm
            - name: certs
              mountPath: /certs

        - name: csi-provisioner
          image: "ghcr.io/topolvm/topolvm-with-sidecar:0.11.0"
          command:
            - /csi-provisioner
            - --csi-address=/run/topolvm/csi-topolvm.sock
            - --feature-gates=Topology=true
            - --leader-election
            - --leader-election-namespace=topolvm-system
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm

        - name: csi-resizer
          image: "ghcr.io/topolvm/topolvm-with-sidecar:0.11.0"
          command:
            - /csi-resizer
            - --csi-address=/run/topolvm/csi-topolvm.sock
            - --leader-election
            - --leader-election-namespace=topolvm-system
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm

        - name: liveness-probe
          image: "ghcr.io/topolvm/topolvm-with-sidecar:0.11.0"
          command:
            - /livenessprobe
            - --csi-address=/run/topolvm/csi-topolvm.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm

      volumes:
        - name: certs
          secret:
            secretName: topolvm-mutatingwebhook
        - emptyDir: {}
          name: socket-dir
      affinity: 
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - topolvm-controller
            topologyKey: kubernetes.io/hostname
---
# Source: topolvm/templates/controller/csidriver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: topolvm.cybozu.com
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  attachRequired: false
  podInfoOnMount: true
  volumeLifecycleModes:
    - Persistent
    - Ephemeral
---
# Source: topolvm/templates/certificates/certificates.yaml
# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: topolvm-webhook-ca
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  secretName: topolvm-webhook-ca
  duration: 87600h # 10y
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: topolvm-webhook-selfsign
  commonName: ca.webhook.topolvm
  isCA: true
  usages:
    - digital signature
    - key encipherment
    - cert sign
---
# Source: topolvm/templates/certificates/certificates.yaml
# Finally, generate a serving certificate for the webhook to use
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: topolvm-mutatingwebhook
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  secretName: topolvm-mutatingwebhook
  duration: 8760h # 1y
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: topolvm-webhook-ca
  dnsNames:
    - topolvm-controller
    - topolvm-controller.topolvm-system
    - topolvm-controller.topolvm-system.svc
  usages:
    - digital signature
    - key encipherment
    - server auth
    - client auth
---
# Source: topolvm/templates/certificates/issuers.yaml
# Create a selfsigned Issuer, in order to create a root CA certificate for
# signing webhook serving certificates
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: topolvm-webhook-selfsign
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selfSigned: {}
---
# Source: topolvm/templates/certificates/issuers.yaml
# Create an Issuer that uses the above generated CA certificate to issue certs
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: topolvm-webhook-ca
  namespace: topolvm-system
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ca:
    secretName: topolvm-webhook-ca
---
# Source: topolvm/charts/cert-manager/templates/webhook-mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: topolvm-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
  annotations:
    cert-manager.io/inject-ca-from-secret: "topolvm-system/topolvm-cert-manager-webhook-ca"
webhooks:
  - name: webhook.cert-manager.io
    rules:
      - apiGroups:
          - "cert-manager.io"
          - "acme.cert-manager.io"
        apiVersions:
          - "v1"
        operations:
          - CREATE
          - UPDATE
        resources:
          - "*/*"
    admissionReviewVersions: ["v1"]
    # This webhook only accepts v1 cert-manager resources.
    # Equivalent matchPolicy ensures that non-v1 resource requests are sent to
    # this webhook (after the resources have been converted to v1).
    matchPolicy: Equivalent
    timeoutSeconds: 10
    failurePolicy: Fail
    # Only include 'sideEffects' field in Kubernetes 1.12+
    sideEffects: None
    clientConfig:
      service:
        name: topolvm-cert-manager-webhook
        namespace: "topolvm-system"
        path: /mutate
---
# Source: topolvm/templates/mutatingwebhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: topolvm-hook
  annotations:
    cert-manager.io/inject-ca-from: topolvm-system/topolvm-mutatingwebhook
  labels:
    helm.sh/chart: topolvm-5.0.0
    app.kubernetes.io/name: topolvm
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: pvc-hook.topolvm.cybozu.com
    admissionReviewVersions:
      - "v1"
      - "v1beta1"
    namespaceSelector:
      matchExpressions:
        - key: topolvm.cybozu.com/webhook
          operator: NotIn
          values: ["ignore"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    clientConfig:
      service:
        namespace: topolvm-system
        name: topolvm-controller
        path: /pvc/mutate
    rules:
      - operations: ["CREATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["persistentvolumeclaims"]
    sideEffects: None
  - name: pod-hook.topolvm.cybozu.com
    admissionReviewVersions:
      - "v1"
      - "v1beta1"
    namespaceSelector:
      matchExpressions:
        - key: topolvm.cybozu.com/webhook
          operator: NotIn
          values: ["ignore"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    clientConfig:
      service:
        namespace: topolvm-system
        name: topolvm-controller
        path: /pod/mutate
    rules:
      - operations: ["CREATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    sideEffects: None
---
# Source: topolvm/templates/priorityclass.yaml
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: topolvm
value: 1e+06
globalDefault: false
description: "Pods using TopoLVM volumes should use this class."
---
# Source: topolvm/charts/cert-manager/templates/webhook-validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: topolvm-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
  annotations:
    cert-manager.io/inject-ca-from-secret: "topolvm-system/topolvm-cert-manager-webhook-ca"
webhooks:
  - name: webhook.cert-manager.io
    namespaceSelector:
      matchExpressions:
      - key: "cert-manager.io/disable-validation"
        operator: "NotIn"
        values:
        - "true"
      - key: "name"
        operator: "NotIn"
        values:
        - topolvm-system
    rules:
      - apiGroups:
          - "cert-manager.io"
          - "acme.cert-manager.io"
        apiVersions:
          - "v1"
        operations:
          - CREATE
          - UPDATE
        resources:
          - "*/*"
    admissionReviewVersions: ["v1"]
    # This webhook only accepts v1 cert-manager resources.
    # Equivalent matchPolicy ensures that non-v1 resource requests are sent to
    # this webhook (after the resources have been converted to v1).
    matchPolicy: Equivalent
    timeoutSeconds: 10
    failurePolicy: Fail
    sideEffects: None
    clientConfig:
      service:
        name: topolvm-cert-manager-webhook
        namespace: "topolvm-system"
        path: /validate
---
# Source: topolvm/charts/cert-manager/templates/startupapicheck-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: topolvm-cert-manager-startupapicheck
  namespace: "topolvm-system"
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-5"
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
---
# Source: topolvm/charts/cert-manager/templates/startupapicheck-rbac.yaml
# create certificate role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: topolvm-cert-manager-startupapicheck:create-cert
  namespace: "topolvm-system"
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-5"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates"]
    verbs: ["create"]
---
# Source: topolvm/charts/cert-manager/templates/startupapicheck-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: topolvm-cert-manager-startupapicheck:create-cert
  namespace: "topolvm-system"
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-5"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: topolvm-cert-manager-startupapicheck:create-cert
subjects:
  - kind: ServiceAccount
    name: topolvm-cert-manager-startupapicheck
    namespace: topolvm-system
---
# Source: topolvm/charts/cert-manager/templates/startupapicheck-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: topolvm-cert-manager-startupapicheck
  namespace: "topolvm-system"
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: topolvm
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.7.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.7.0
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "1"
spec:
  backoffLimit: 4
  template:
    metadata:
      labels:
        app: startupapicheck
        app.kubernetes.io/name: startupapicheck
        app.kubernetes.io/instance: topolvm
        app.kubernetes.io/component: "startupapicheck"
        app.kubernetes.io/version: "v1.7.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.7.0
    spec:
      restartPolicy: OnFailure
      serviceAccountName: topolvm-cert-manager-startupapicheck
      securityContext:
        runAsNonRoot: true
      containers:
        - name: cert-manager
          image: "quay.io/jetstack/cert-manager-ctl:v1.7.0"
          imagePullPolicy: IfNotPresent
          args:
          - check
          - api
          - --wait=1m
